<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: sql | detached head]]></title>
  <link href="http://ivanbrennan.github.io/blog/categories/sql/atom.xml" rel="self"/>
  <link href="http://ivanbrennan.github.io/"/>
  <updated>2014-11-08T19:30:40-05:00</updated>
  <id>http://ivanbrennan.github.io/</id>
  <author>
    <name><![CDATA[Ivan Brennan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[unix know-how]]></title>
    <link href="http://ivanbrennan.github.io/blog/2014/11/04/unix-know-how/"/>
    <updated>2014-11-04T22:48:00-05:00</updated>
    <id>http://ivanbrennan.github.io/blog/2014/11/04/unix-know-how</id>
    <content type="html"><![CDATA[<p>I was recently working with MySQL&rsquo;s timezone conversion capabilities and noticed that the following query didn&rsquo;t work when run against my local database (though it worked elsewhere):
<code>sql
SELECT CONVERT_TZ('2014-01-01 12:00:00', 'America/New_York', 'UTC');
=&gt; null
</code>
The named timezones (<code>America/New_York</code>, <code>UTC</code>) weren&rsquo;t recognized, but if I specified timezones numerically, it worked as expected:
<code>sql
SELECT CONVERT_TZ('2014-01-01 12:00:00', '-5:00', '+00:00');
=&gt; 2014-01-01 17:00:00
</code>
I hadn&rsquo;t loaded my system&rsquo;s zoneinfo files into the <code>mysql</code> database. I followed the <a href="http://dev.mysql.com/doc/refman/5.5/en/time-zone-support.html">docs</a> and ran the <code>mysql_tzinfo_to_sql</code> utility to do so:
<code>bash
mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root mysql
</code>
Midway through loading the tables, <code>mysql_tzinfo_to_sql</code> failed with: &ldquo;ERROR 1406 (22001) at line 38408: Data too long for column &lsquo;Abbreviation&rsquo; at row 1&rdquo;. A coworker suggested I write the command&rsquo;s output to a file so I could see the problem:
<code>bash
mysql_tzinfo_to_sql /usr/share/zoneinfo &gt; debuggingfile
</code>
This produced a file of SQL insert statements, with the problematic code on line 38408:
<code>sql
INSERT INTO time_zone_transition_type (Time_zone_id, Transition_type_id, Offset, Is_DST, Abbreviation) VALUES (@time_zone_id, 0, 0, 0, 'Local time zone must be set--see zic manual page');
</code>
Clearly, the <code>'Local time zone must be set--see zic manual page'</code> value was too long for the Abbreviation column. I shortened it to <code>'unset'</code>, fed the file into mysql, and all was well.
<code>bash
mysql -u root mysql &lt; debuggingfile
</code></p>

<p>I was struck by the simplicity of this solution, and how a little unix know-how can demystify a problem.</p>
]]></content>
  </entry>
  
</feed>
